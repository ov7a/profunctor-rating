-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module ProfunctorIo.Mutation exposing (..)

import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode exposing (Decoder)
import ProfunctorIo.InputObject
import ProfunctorIo.Interface
import ProfunctorIo.Object
import ProfunctorIo.Scalar
import ProfunctorIo.ScalarCodecs
import ProfunctorIo.Union


type alias InsertJobsRequiredArguments =
    { objects : List ProfunctorIo.InputObject.Jobs_insert_input }


{-| insert data into the table: "jobs"

  - objects - the rows to be inserted

-}
insert_jobs :
    InsertJobsRequiredArguments
    -> SelectionSet decodesTo ProfunctorIo.Object.Jobs_mutation_response
    -> SelectionSet (Maybe decodesTo) RootMutation
insert_jobs requiredArgs____ object____ =
    Object.selectionForCompositeField "insert_jobs" [ Argument.required "objects" requiredArgs____.objects (ProfunctorIo.InputObject.encodeJobs_insert_input |> Encode.list) ] object____ (Basics.identity >> Decode.nullable)


type alias InsertWaitlistResumeRequiredArguments =
    { objects : List ProfunctorIo.InputObject.Waitlist_resume_insert_input }


{-| insert data into the table: "waitlist\_resume"

  - objects - the rows to be inserted

-}
insert_waitlist_resume :
    InsertWaitlistResumeRequiredArguments
    -> SelectionSet decodesTo ProfunctorIo.Object.Waitlist_resume_mutation_response
    -> SelectionSet (Maybe decodesTo) RootMutation
insert_waitlist_resume requiredArgs____ object____ =
    Object.selectionForCompositeField "insert_waitlist_resume" [ Argument.required "objects" requiredArgs____.objects (ProfunctorIo.InputObject.encodeWaitlist_resume_insert_input |> Encode.list) ] object____ (Basics.identity >> Decode.nullable)


logout :
    SelectionSet decodesTo ProfunctorIo.Object.LogoutResponse
    -> SelectionSet (Maybe decodesTo) RootMutation
logout object____ =
    Object.selectionForCompositeField "logout" [] object____ (Basics.identity >> Decode.nullable)


type alias TgAuthOptionalArguments =
    { input : OptionalArgument ProfunctorIo.InputObject.TGAuthRequestInput }


tg_auth :
    (TgAuthOptionalArguments -> TgAuthOptionalArguments)
    -> SelectionSet decodesTo ProfunctorIo.Object.AuthPayload
    -> SelectionSet (Maybe decodesTo) RootMutation
tg_auth fillInOptionals____ object____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { input = Absent }

        optionalArgs____ =
            [ Argument.optional "input" filledInOptionals____.input ProfunctorIo.InputObject.encodeTGAuthRequestInput ]
                |> List.filterMap Basics.identity
    in
    Object.selectionForCompositeField "tg_auth" optionalArgs____ object____ (Basics.identity >> Decode.nullable)


tg_auth_refresh_jwt_token :
    SelectionSet decodesTo ProfunctorIo.Object.AuthPayload
    -> SelectionSet (Maybe decodesTo) RootMutation
tg_auth_refresh_jwt_token object____ =
    Object.selectionForCompositeField "tg_auth_refresh_jwt_token" [] object____ (Basics.identity >> Decode.nullable)
